import pandas as pd
from io import StringIO
from connect_gemini import estructurar_con_prompt_especifico

def procesar(texto_ocr):
    prompt = f"""
Tu rol es actuar como un operador de Data Entry para una empresa gastron√≥mica. Vas a estructurar facturas como una tabla con las siguientes columnas:
Fecha, Producto, Cantidad, Total, Local, Proveedor

‚ùó No incluyas la columna Precio. Esa ser√° calculada luego.
‚ö† No modifiques la informaci√≥n del OCR.
** Fecha: Es de las primeras l√≠neas, luego de "Fecha" en formato "xx/xx/xxxx".
** Producto: Corresponde a "Descripcion" de cada producto. (Recorta lo que diga "Oferta").
** Cantidad: Corresponde a los valores de la columna "CANT.1", la cual nos brinda informaci√≥n de cuantos kgs o unidades compramos. Ten en cuenta en este campo que, el proveedor indica de estas maneras: "50,00" para decir correctamente cincuenta unidades (50). O tambi√©n puede indicarlo de manera "50.00" para decir correctamente cincuenta unidades (50). Es importante que incluyas las "," comas en los separadores decimales. No incluyas separador de miles.
** Cantidad: Siempre se encuentra despu√©s despu√©s del c√≥digo. No confundas c√≥digo (c√≥digo que adem√°s de n√∫meros contiene letras) con Cantidades que solo son n√∫meros. Las cantidades son el segundo valor, ya que el primero es el c√≥digo del proveedor, el cual no nos interesa.
** Total: Corresponde a la columna "Importe". Ten en cuenta que, al igual que en cantidad, el proveedor puede indicarnos de manera: "81.704,32" para informarnos de, (manera que corresponde) 81704,32. Es importante que incluyas las comas "," en los decimales. No incluyas separador de miles.
üìç El Local ser√° el texto que sigue a la palabra "Sres.:" debes darme todo el campo hasta que aparezca un gui√≥n "-". Despu√©s del gui√≥n no debes traer nada.
üßæ El proveedor ser√° "Blanca Luna".



**Formato CSV v√°lido:**
- Todos los campos entre comillas dobles (").
- Separados por coma.
- Una l√≠nea por producto.
- Repet√≠ la fecha si aparece solo una vez.
- No uses separadores de miles.
- Sin encabezado.

Texto OCR:
\"\"\"{texto_ocr}\"\"\"
"""
    resultado_csv = estructurar_con_prompt_especifico(prompt)

    if not resultado_csv or resultado_csv.strip() == "":
        print("‚ö†Ô∏è Gemini no devolvi√≥ datos √∫tiles.")
        return None

    try:
        df = pd.read_csv(StringIO(resultado_csv), header=None)
        df.columns = ["Fecha", "Producto", "Cantidad", "Total", "Local", "Proveedor"]

        # Limpieza de n√∫meros con puntos de miles o comas decimales
        def limpiar_numero(valor):
            return float(str(valor).replace(".", "").replace(",", "."))

        df["Cantidad"] = df["Cantidad"].apply(limpiar_numero)
        df["Total"] = df["Total"].apply(limpiar_numero)

        # C√°lculo del precio
        df["Precio"] = (df["Total"] / df["Cantidad"]).round(2)

        # Orden final de columnas
        columnas_finales = ["Fecha", "Producto", "Cantidad", "Precio", "Total", "Local", "Proveedor"]
        return df[columnas_finales]

    except Exception as e:
        print(f"‚ùå Error al procesar CSV en {__file__}: {e}")
        return None
